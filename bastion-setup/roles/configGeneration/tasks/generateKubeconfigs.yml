---

# https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/05-kubernetes-configuration-files.md



### configure the kube tool binaries
# This was written with the assumption that the kubectl will be installed
# on the automation server. Another alternative is to set up everything locally (own computer)
# and use ssh tunnel to the automation server.
# NOTE: there is no external IPs for the controllers or workers KUBERNETES_PUBLIC_ADDRESS is defined in "vars"

- name: Generating kubeconfig file for each worker node ( set-cluster kubectl)
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
        --certificate-authority={{ certDIR }}/ca.pem \
        --embed-certs=true \
        --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
        --kubeconfig={{ item }}.kubeconfig
        "
  with_items: "{{ groups['kube-worker-private']}}"

- name: set-credentials kubectl for each worker node
  shell: "kubectl config set-credentials system:node:{{ item }} \
        --client-certificate={{ certDIR }}/{{ item }}.pem \
        --client-key={{ certDIR }}/{{ item }}-key.pem \
        --embed-certs=true \
        --kubeconfig={{ item }}.kubeconfig
        "
  with_items: "{{ groups['kube-worker-private']}}"


- name: set-context  kubectl for each worker node
  shell: "kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:node:{{ item }} \
    --kubeconfig={{ item }}.kubeconfig
    "
  with_items: "{{ groups['kube-worker-private']}}"

- name: use-context default  for each worker node
  shell: "kubectl config use-context default --kubeconfig={{ item }}.kubeconfig"
  with_items: "{{ groups['kube-worker-private']}}"


################################ END OF WORKER KUBECTL CONFIGURATION ################################



################################ KUBE CONTROLLER KUBECTL CONFIGURATION ################################
- name: set-cluster  kubectl for kube-proxy, kube-controller-manager, kube-scheduler,and admin
  shell: "kubectl config set-cluster kubernetes-the-hard-way \
          --certificate-authority={{ certDIR }}/ca.pem \
          --embed-certs=true \
          --server=https://{{ KUBERNETES_PUBLIC_ADDRESS }}:6443 \
          --kubeconfig={{item.kubeconfig}}
          "
  loop:
    - { kubeconfig: 'kube-proxy.kubeconfig' }
    - { kubeconfig: 'kube-controller-manager.kubeconfig' }
    - { kubeconfig: 'kube-scheduler.kubeconfig' }
    - { kubeconfig: 'admin.kubeconfig' }
    

- name:  set-credentials kubectl for kube-proxy, kube-controller-manager, kube-scheduler,and admin
  shell: "kubectl config set-credentials {{item.creds}} \
      --client-certificate={{ certDIR }}/{{item.cert}} \
      --client-key={{ certDIR }}/{{item.key}} \
      --embed-certs=true \
      --kubeconfig={{item.kubeconfig}}
      "
  loop:
    - { creds: 'system:kube-proxy', cert: 'kube-proxy.pem', key: 'kube-proxy-key.pem', kubeconfig: 'kube-proxy.kubeconfig' }
    - { creds: 'system:kube-controller-manager', cert: 'kube-controller-manager.pem', key: 'kube-controller-manager-key.pem', kubeconfig: 'kube-controller-manager.kubeconfig' }
    - { creds: 'system:kube-scheduler', cert: 'kube-scheduler.pem', key: 'kube-scheduler-key.pem', kubeconfig: 'kube-scheduler.kubeconfig' }
    - { creds: 'system:admin', cert: 'admin.pem', key: 'admin-key.pem', kubeconfig: 'admin.kubeconfig' }


- name: set-context kubectl for kube-proxy, kube-controller-manager, kube-scheduler,and admin
  shell: "kubectl config set-context default \
      --cluster=kubernetes-the-hard-way \
      --user={{item.creds}} \
      --kubeconfig={{item.kubeconfig}}"
  loop:
    - { creds: 'system:kube-proxy', kubeconfig: 'kube-proxy.kubeconfig' }
    - { creds: 'system:kube-controller-manager', kubeconfig: 'kube-controller-manager.kubeconfig' }
    - { creds: 'system:kube-scheduler', kubeconfig: 'kube-scheduler.kubeconfig' }
    - { creds: 'system:admin',  kubeconfig: 'admin.kubeconfig' }

- name: use-context kubectl for kube-proxy, kube-controller-manager, kube-scheduler,and admin
  shell: "kubectl config use-context default --kubeconfig={{item.kubeconfig}}"
  loop:
    - { kubeconfig: 'kube-proxy.kubeconfig' }
    - { kubeconfig: 'kube-controller-manager.kubeconfig' }
    - { kubeconfig: 'kube-scheduler.kubeconfig' }
    - { kubeconfig: 'admin.kubeconfig' }


- name: Set the *.kubeconfig files 
  shell: "chmod 644 *.kubeconfig"

# - name: Set the *.kubeconfig files 
#   command: "chmod 644 /*.kubeconfig"
  